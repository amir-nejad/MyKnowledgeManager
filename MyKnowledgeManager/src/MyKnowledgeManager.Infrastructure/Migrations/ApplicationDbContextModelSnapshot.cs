// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyKnowledgeManager.Infrastructure.Data;

#nullable disable

namespace MyKnowledgeManager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.Knowledge", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTrashItem")
                        .HasColumnType("bit");

                    b.Property<int>("KnowledgeImportance")
                        .HasColumnType("int");

                    b.Property<int>("KonwledgeLevel")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Knowledges");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.KnowledgeTag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsTrashItem")
                        .HasColumnType("bit");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KnowledgeTags");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.KnowledgeTagRelation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsTrashItem")
                        .HasColumnType("bit");

                    b.Property<string>("KnowledgeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KnowledgeTagId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeId");

                    b.HasIndex("KnowledgeTagId");

                    b.ToTable("KnowledgeTagsRelation");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.User.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsTrashItem")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.Knowledge", b =>
                {
                    b.HasOne("MyKnowledgeManager.Core.Aggregates.User.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Knowledges")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.KnowledgeTagRelation", b =>
                {
                    b.HasOne("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.Knowledge", "Knowledge")
                        .WithMany("KnowledgeTagRelations")
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.KnowledgeTag", "KnowledgeTag")
                        .WithMany("KnowledgeTagRelations")
                        .HasForeignKey("KnowledgeTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Knowledge");

                    b.Navigation("KnowledgeTag");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.Knowledge", b =>
                {
                    b.Navigation("KnowledgeTagRelations");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.Knowledge.Entities.KnowledgeTag", b =>
                {
                    b.Navigation("KnowledgeTagRelations");
                });

            modelBuilder.Entity("MyKnowledgeManager.Core.Aggregates.User.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Knowledges");
                });
#pragma warning restore 612, 618
        }
    }
}
